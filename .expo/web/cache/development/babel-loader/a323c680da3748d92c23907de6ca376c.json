{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { HorizontalFoodCard } from \"../../components\";\nimport { FONTS, COLORS, SIZES, icons, dummyData } from \"../../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Section = function Section(_ref) {\n  var title = _ref.title,\n      onPress = _ref.onPress,\n      children = _ref.children;\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        marginHorizontal: SIZES.padding,\n        marginTop: 30,\n        marginBottom: 20\n      },\n      children: [_jsx(Text, {\n        style: _objectSpread({\n          flex: 1\n        }, FONTS.h3),\n        children: title\n      }), _jsx(TouchableOpacity, {\n        onPress: onPress,\n        children: _jsx(Text, {\n          style: _objectSpread({\n            color: COLORS.primary\n          }, FONTS.body3),\n          children: \"Show All\"\n        })\n      })]\n    }), children]\n  });\n};\n\nvar Home = function Home() {\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedCategoryId = _React$useState2[0],\n      setselectedCategoryId = _React$useState2[1];\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedMenuType = _React$useState4[0],\n      setselectedMenuType = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      menuList = _React$useState6[0],\n      setmenuList = _React$useState6[1];\n\n  React.useEffect(function () {\n    handlerChangeCategory(selectedCategoryId, selectedMenuType);\n  }, []);\n\n  function handlerChangeCategory(categoryId, menuTypeId) {\n    var selectedMenu = dummyData.menu.find(function (a) {\n      return a.id == menuTypeId;\n    });\n    setmenuList(selectedMenu == null ? void 0 : selectedMenu.list.filter(function (a) {\n      return a.categories.includes(categoryId);\n    }));\n  }\n\n  function renderSearch() {\n    return _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        height: 40,\n        alignItems: \"center\",\n        marginHorizontal: SIZES.padding,\n        marginVertical: SIZES.base,\n        paddingHorizontal: SIZES.radius,\n        borderRadius: SIZES.radius,\n        backgroundColor: COLORS.lightGray2\n      },\n      children: [_jsx(Image, {\n        source: icons.search,\n        style: {\n          height: 20,\n          width: 20,\n          tintColor: COLORS.black\n        }\n      }), _jsx(TextInput, {\n        style: _objectSpread({\n          flex: 1,\n          marginLeft: SIZES.radius\n        }, FONTS.body3),\n        placeholder: \"Search Food ...\"\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Image, {\n          source: icons.filter,\n          style: {\n            height: 20,\n            width: 20,\n            tintColor: COLORS.black\n          }\n        })\n      })]\n    });\n  }\n\n  function renderMenuTypes() {\n    return _jsx(FlatList, {\n      horizontal: true,\n      data: dummyData.menu,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + item.id;\n      },\n      showsHorizontalScrollIndicator: false,\n      contentContainerStyle: {\n        marginTop: 30,\n        marginBottom: 20\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginLeft: SIZES.padding,\n            marginRight: index == dummyData.menu.length - 1 ? SIZES.padding : 0\n          },\n          onPress: function onPress() {\n            setselectedMenuType(item.id);\n            handlerChangeCategory(selectedCategoryId, item.id);\n          },\n          children: _jsx(Text, {\n            style: _objectSpread({\n              color: selectedMenuType == item.id ? COLORS.primary : COLORS.black\n            }, FONTS.h3),\n            children: item.name\n          })\n        });\n      }\n    });\n  }\n\n  function renderRecommendedSection() {\n    return _jsx(Section, {\n      title: \"Recommended\",\n      onPress: function onPress() {\n        return console.log(\"Show All Recommended\");\n      }\n    });\n  }\n\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [renderSearch(), _jsx(FlatList, {\n      data: menuList,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + item.id;\n      },\n      showsVerticalScrollIndicator: false,\n      ListHeaderComponent: _jsxs(View, {\n        children: [renderRecommendedSection(), renderMenuTypes()]\n      }),\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n            index = _ref3.index;\n        return _jsx(HorizontalFoodCard, {\n          containerStyle: {\n            height: 130,\n            alignItems: \"center\",\n            marginHorizontal: SIZES.padding,\n            marginBottom: SIZES.radius\n          },\n          imageStyle: {\n            marginTop: 20,\n            height: 110,\n            width: 110\n          },\n          item: item,\n          onPress: function onPress() {\n            return console.log(\"HorizontalFoodCard \");\n          }\n        });\n      }\n    })]\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/nazir/OneDrive/Desktop/FoodDelivery (19.03.2022)/screens/Home/Home.js"],"names":["React","HorizontalFoodCard","FONTS","COLORS","SIZES","icons","dummyData","Section","title","onPress","children","flexDirection","marginHorizontal","padding","marginTop","marginBottom","flex","h3","color","primary","body3","Home","useState","selectedCategoryId","setselectedCategoryId","selectedMenuType","setselectedMenuType","menuList","setmenuList","useEffect","handlerChangeCategory","categoryId","menuTypeId","selectedMenu","menu","find","a","id","list","filter","categories","includes","renderSearch","height","alignItems","marginVertical","base","paddingHorizontal","radius","borderRadius","backgroundColor","lightGray2","search","width","tintColor","black","marginLeft","renderMenuTypes","item","index","marginRight","length","name","renderRecommendedSection","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,kBAAT;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,SAAtC;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAiC;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAC/C,SACE,MAAC,IAAD;AAAA,eAEK,MAAC,IAAD;AACG,MAAA,KAAK,EAAE;AACLC,QAAAA,aAAa,EAAC,KADT;AAELC,QAAAA,gBAAgB,EAACR,KAAK,CAACS,OAFlB;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILC,QAAAA,YAAY,EAAC;AAJR,OADV;AAAA,iBAQA,KAAC,IAAD;AAAM,QAAA,KAAK;AAAGC,UAAAA,IAAI,EAAC;AAAR,WAAcd,KAAK,CAACe,EAApB,CAAX;AAAA,kBACGT;AADH,QARA,EAWA,KAAC,gBAAD;AACC,QAAA,OAAO,EAAEC,OADV;AAAA,kBAGA,KAAC,IAAD;AACG,UAAA,KAAK;AAAGS,YAAAA,KAAK,EAACf,MAAM,CAACgB;AAAhB,aAA4BjB,KAAK,CAACkB,KAAlC,CADR;AAAA;AAAA;AAHA,QAXA;AAAA,MAFL,EAyBIV,QAzBJ;AAAA,IADF;AA6BD,CA9BD;;AAiCA,IAAMW,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,wBAAoDrB,KAAK,CAACsB,QAAN,CAAe,CAAf,CAApD;AAAA;AAAA,MAAOC,kBAAP;AAAA,MAA2BC,qBAA3B;;AACA,yBAAgDxB,KAAK,CAACsB,QAAN,CAAe,CAAf,CAAhD;AAAA;AAAA,MAAOG,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,yBAAgC1B,KAAK,CAACsB,QAAN,CAAe,EAAf,CAAhC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AAEA5B,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,YAAM;AACpBC,IAAAA,qBAAqB,CAACP,kBAAD,EAAqBE,gBAArB,CAArB;AACD,GAFD,EAEG,EAFH;;AAMA,WAASK,qBAAT,CAA+BC,UAA/B,EAA2CC,UAA3C,EAAuD;AAErD,QAAIC,YAAY,GAAG3B,SAAS,CAAC4B,IAAV,CAAeC,IAAf,CAAoB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,EAAF,IAAQL,UAAf;AAAA,KAApB,CAAnB;AAGAJ,IAAAA,WAAW,CACTK,YADS,oBACTA,YAAY,CAAEK,IAAd,CAAmBC,MAAnB,CAA0B,UAACH,CAAD;AAAA,aAAOA,CAAC,CAACI,UAAF,CAAaC,QAAb,CAAsBV,UAAtB,CAAP;AAAA,KAA1B,CADS,CAAX;AAGD;;AAID,WAASW,YAAT,GAAwB;AACtB,WACE,MAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACL/B,QAAAA,aAAa,EAAE,KADV;AAELgC,QAAAA,MAAM,EAAE,EAFH;AAGLC,QAAAA,UAAU,EAAE,QAHP;AAILhC,QAAAA,gBAAgB,EAAER,KAAK,CAACS,OAJnB;AAKLgC,QAAAA,cAAc,EAAEzC,KAAK,CAAC0C,IALjB;AAMLC,QAAAA,iBAAiB,EAAE3C,KAAK,CAAC4C,MANpB;AAOLC,QAAAA,YAAY,EAAE7C,KAAK,CAAC4C,MAPf;AAQLE,QAAAA,eAAe,EAAE/C,MAAM,CAACgD;AARnB,OADT;AAAA,iBAaE,KAAC,KAAD;AACE,QAAA,MAAM,EAAE9C,KAAK,CAAC+C,MADhB;AAEE,QAAA,KAAK,EAAE;AACLT,UAAAA,MAAM,EAAE,EADH;AAELU,UAAAA,KAAK,EAAE,EAFF;AAGLC,UAAAA,SAAS,EAAEnD,MAAM,CAACoD;AAHb;AAFT,QAbF,EAuBE,KAAC,SAAD;AACE,QAAA,KAAK;AACHvC,UAAAA,IAAI,EAAE,CADH;AAEHwC,UAAAA,UAAU,EAAEpD,KAAK,CAAC4C;AAFf,WAGA9C,KAAK,CAACkB,KAHN,CADP;AAME,QAAA,WAAW,EAAC;AANd,QAvBF,EAiCE,KAAC,gBAAD;AAAA,kBAGE,KAAC,KAAD;AACE,UAAA,MAAM,EAAEf,KAAK,CAACkC,MADhB;AAEE,UAAA,KAAK,EAAE;AACLI,YAAAA,MAAM,EAAE,EADH;AAELU,YAAAA,KAAK,EAAE,EAFF;AAGLC,YAAAA,SAAS,EAAEnD,MAAM,CAACoD;AAHb;AAFT;AAHF,QAjCF;AAAA,MADF;AAgDD;;AACF,WAASE,eAAT,GAA2B;AACzB,WACE,KAAC,QAAD;AACG,MAAA,UAAU,MADb;AAEG,MAAA,IAAI,EAAEnD,SAAS,CAAC4B,IAFnB;AAGG,MAAA,YAAY,EAAE,sBAAAwB,IAAI;AAAA,oBAAOA,IAAI,CAACrB,EAAZ;AAAA,OAHrB;AAIG,MAAA,8BAA8B,EAAE,KAJnC;AAKG,MAAA,qBAAqB,EAAE;AACrBvB,QAAAA,SAAS,EAAC,EADW;AAErBC,QAAAA,YAAY,EAAC;AAFQ,OAL1B;AASG,MAAA,UAAU,EAAE;AAAA,YAAE2C,IAAF,SAAEA,IAAF;AAAA,YAAQC,KAAR,SAAQA,KAAR;AAAA,eACV,KAAC,gBAAD;AACG,UAAA,KAAK,EAAE;AACLH,YAAAA,UAAU,EAACpD,KAAK,CAACS,OADZ;AAEL+C,YAAAA,WAAW,EAACD,KAAK,IAAIrD,SAAS,CAAC4B,IAAV,CAAe2B,MAAf,GAAuB,CAAhC,GAAoCzD,KAAK,CAACS,OAA1C,GAAmD;AAF1D,WADV;AAKG,UAAA,OAAO,EAAK,mBAAM;AAChBa,YAAAA,mBAAmB,CAACgC,IAAI,CAACrB,EAAN,CAAnB;AACAP,YAAAA,qBAAqB,CACpBP,kBADoB,EACAmC,IAAI,CAACrB,EADL,CAArB;AAED,WATJ;AAAA,oBAWC,KAAC,IAAD;AACE,YAAA,KAAK;AACHnB,cAAAA,KAAK,EAACO,gBAAgB,IAAGiC,IAAI,CAACrB,EAAxB,GACJlC,MAAM,CAACgB,OADH,GACYhB,MAAM,CAACoD;AAFtB,eAGArD,KAAK,CAACe,EAHN,CADP;AAAA,sBAOGyC,IAAI,CAACI;AAPR;AAXD,UADU;AAAA;AATf,MADF;AAmCD;;AACF,WAASC,wBAAT,GAAoC;AAClC,WACE,KAAC,OAAD;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAN;AAAA;AAFX,MADF;AASD;;AACC,SACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLjD,MAAAA,IAAI,EAAE;AADD,KADT;AAAA,eAMG0B,YAAY,EANf,EASE,KAAC,QAAD;AACE,MAAA,IAAI,EAAEf,QADR;AAEE,MAAA,YAAY,EAAE,sBAAC+B,IAAD;AAAA,oBAAaA,IAAI,CAACrB,EAAlB;AAAA,OAFhB;AAGE,MAAA,4BAA4B,EAAE,KAHhC;AAIE,MAAA,mBAAmB,EACjB,MAAC,IAAD;AAAA,mBAEK0B,wBAAwB,EAF7B,EAKKN,eAAe,EALpB;AAAA,QALJ;AAaE,MAAA,UAAU,EAAE,2BAAqB;AAAA,YAAlBC,IAAkB,SAAlBA,IAAkB;AAAA,YAAZC,KAAY,SAAZA,KAAY;AAC/B,eACE,KAAC,kBAAD;AACE,UAAA,cAAc,EAAE;AACdhB,YAAAA,MAAM,EAAE,GADM;AAEdC,YAAAA,UAAU,EAAE,QAFE;AAGdhC,YAAAA,gBAAgB,EAAER,KAAK,CAACS,OAHV;AAIdE,YAAAA,YAAY,EAAEX,KAAK,CAAC4C;AAJN,WADlB;AAOE,UAAA,UAAU,EAAE;AACVlC,YAAAA,SAAS,EAAE,EADD;AAEV6B,YAAAA,MAAM,EAAE,GAFE;AAGVU,YAAAA,KAAK,EAAE;AAHG,WAPd;AAYE,UAAA,IAAI,EAAEK,IAZR;AAaE,UAAA,OAAO,EAAE;AAAA,mBAAMM,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAN;AAAA;AAbX,UADF;AAiBD;AA/BH,MATF;AAAA,IADF;AA6CD,CAtKD;;AAwKA,eAAe5C,IAAf","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Image,\n  TextInput,\n  FlatList,\n} from \"react-native\";\nimport { HorizontalFoodCard } from \"../../components\";\nimport { FONTS, COLORS, SIZES, icons, dummyData } from \"../../constants\";\n\nconst Section = ( {title, onPress, children}) => {\n  return (\n    <View>\n           {/*  Header */}\n         <View \n            style={{\n              flexDirection:'row',\n              marginHorizontal:SIZES.padding,\n              marginTop: 30,\n              marginBottom:20\n            }}  \n         >\n         <Text style={{flex:1, ...FONTS.h3}}>\n           {title}\n         </Text>\n         <TouchableOpacity\n          onPress={onPress}\n         >\n         <Text\n            style={{color:COLORS.primary, ...FONTS.body3}}\n         >\n          Show All\n         </Text>\n\n         </TouchableOpacity>\n       </View>\n       {/* Content */}\n       {children}\n    </View>\n  )\n}\n\n\nconst Home = () => {\n  const [selectedCategoryId, setselectedCategoryId] = React.useState(1);\n  const [selectedMenuType, setselectedMenuType] = React.useState(1);\n  const [menuList, setmenuList] = React.useState([]);\n\n  React.useEffect(() => {\n    handlerChangeCategory(selectedCategoryId, selectedMenuType);\n  }, []);\n\n  //handler\n\n  function handlerChangeCategory(categoryId, menuTypeId) {\n    //Find The menu based on the menytypeid\n    let selectedMenu = dummyData.menu.find((a) => a.id == menuTypeId);\n\n    //set the menu based on the categoryid\n    setmenuList(\n      selectedMenu?.list.filter((a) => a.categories.includes(categoryId))\n    );\n  }\n\n  //render\n\n  function renderSearch() {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          height: 40,\n          alignItems: \"center\",\n          marginHorizontal: SIZES.padding,\n          marginVertical: SIZES.base,\n          paddingHorizontal: SIZES.radius,\n          borderRadius: SIZES.radius,\n          backgroundColor: COLORS.lightGray2,\n        }}\n      >\n        {/* Icon */}\n        <Image\n          source={icons.search}\n          style={{\n            height: 20,\n            width: 20,\n            tintColor: COLORS.black,\n          }}\n        />\n\n        {/* Text Input*/}\n        <TextInput\n          style={{\n            flex: 1,\n            marginLeft: SIZES.radius,\n            ...FONTS.body3,\n          }}\n          placeholder=\"Search Food ...\"\n        />\n\n        {/* filter Button*/}\n        <TouchableOpacity\n        //onpress\n        >\n          <Image\n            source={icons.filter}\n            style={{\n              height: 20,\n              width: 20,\n              tintColor: COLORS.black,\n            }}\n          />\n        </TouchableOpacity>\n      </View>\n    );\n  }\n function renderMenuTypes (){\n   return(\n     <FlatList \n        horizontal\n        data={dummyData.menu}\n        keyExtractor={item => `${item.id}`}\n        showsHorizontalScrollIndicator={false}\n        contentContainerStyle={{\n          marginTop:30,\n          marginBottom:20\n        }}\n        renderItem={({item, index})=> (\n          <TouchableOpacity\n             style={{\n               marginLeft:SIZES.padding,\n               marginRight:index == dummyData.menu.length -1 ? SIZES.padding :0\n             }}\n             onPress = { () => {\n               setselectedMenuType(item.id)\n               handlerChangeCategory\n               (selectedCategoryId, item.id)\n             }}\n          >\n           <Text\n             style={{\n               color:selectedMenuType ==item.id\n               ? COLORS.primary: COLORS.black,\n               ...FONTS.h3\n              }}\n           >\n             {item.name}\n           </Text>\n          </TouchableOpacity>\n        )}\n     />\n   )\n }\nfunction renderRecommendedSection (){\n  return(\n    <Section\n      title=\"Recommended\"\n      onPress={() => console.log(\"Show All Recommended\")}\n    >\n\n\n    </Section>\n  )\n}\n  return (\n    <View\n      style={{\n        flex: 1,\n      }}\n    >\n      {/* Search */}\n      {renderSearch()}\n\n      {/* List */}\n      <FlatList\n        data={menuList}\n        keyExtractor={(item) => `${item.id}`}\n        showsVerticalScrollIndicator={false}\n        ListHeaderComponent={\n          <View>\n              {/*  Recommended*/}\n              {renderRecommendedSection()}\n\n              {/*  Menu Type*/}\n              {renderMenuTypes()}\n            </View>\n        }\n        renderItem={({ item, index }) => {\n          return (\n            <HorizontalFoodCard\n              containerStyle={{\n                height: 130,\n                alignItems: \"center\",\n                marginHorizontal: SIZES.padding,\n                marginBottom: SIZES.radius,\n              }}\n              imageStyle={{\n                marginTop: 20,\n                height: 110,\n                width: 110,\n              }}\n              item={item}\n              onPress={() => console.log(\"HorizontalFoodCard \")}\n            />\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}